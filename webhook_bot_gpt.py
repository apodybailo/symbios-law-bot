import os
import logging
from openai import OpenAI

# üîê –ö–ª—é—á—ñ –∑ .env
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
client = OpenAI(api_key=OPENAI_API_KEY)

# üîä –õ–æ–≥—É–≤–∞–Ω–Ω—è
logger = logging.getLogger("symbios-law-gpt")

# üß† –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
def generate_gpt_response(user_input: str, context: str = "") -> str:
    try:
        prompt = f"–ê–Ω–∞–ª—ñ–∑—É–π —é—Ä–∏–¥–∏—á–Ω–∏–π –¥–æ–∫—É–º–µ–Ω—Ç:\n–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context}\n–ó–∞–ø–∏—Ç: {user_input}"

        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "–¢–∏ —é—Ä–∏–¥–∏—á–Ω–∏–π –∞—Å–∏—Å—Ç–µ–Ω—Ç. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —á—ñ—Ç–∫–æ —Ç–∞ –ª–∞–∫–æ–Ω—ñ—á–Ω–æ."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.3,
            max_tokens=800
        )

        reply = response.choices[0].message.content.strip()
        return reply

    except Exception as e:
        logger.error(f"GPT Error: {str(e)}")
        return "‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó GPT-–≤—ñ–¥–ø–æ–≤—ñ–¥—ñ."
